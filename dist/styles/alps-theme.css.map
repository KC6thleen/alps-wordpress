{"version":3,"sources":["assets/styles/_layout.grids.scss","assets/styles/_module.sidebar.scss","assets/styles/_settings.variables.scss","node_modules/node-bourbon/node_modules/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss"],"names":[],"mappings":"AASI,mBACA,+BAAgC,CACjC,ACNC,iBACA,6BCqBgB,ADpBhB,mBEMa,AFLb,mBEKa,CFId,AAPC,gEAEE,mBECW,AFAX,qBEAW,AFCX,qBC0Fa,ADzFb,6BCYc,CDXf,AAIL,gBACE,oBAAc,AAAd,oBAAc,AAAd,aAAc,AACd,wBAAwB,AAAxB,qBAAwB,AAAxB,sBAAwB,CACzB,AAGC,oCACE,qBEda,CFed,AAOH,iBACE,qBCoEiB,ADnEjB,oBAAc,AAAd,oBAAc,AAAd,aAAc,AACd,mBEzBe,AF0Bf,mBE1Be,CF2BhB,AAED,QACE,6DCuC6D,ADtC7D,kBE/Be,AFgCf,aCVkB,CDcnB,AAPD,cAKI,qBCyDe,CDxDhB,AAGD,4BACE,UAAY,CACb,AACD,6BACE,cAAe,AACf,qBCgDe,CD/ChB,AAEH,uBAEI,WAAY,AACZ,WAAY,AACZ,cC5BgB,AD6BhB,kBEnDa,CFoFd,AAtCH,+BAOM,yBAA0B,AAC1B,gBAAiB,AACjB,mBCoCa,ADnCb,qBCmCa,CDlCd,AACD,6BACE,iBE3DW,CF+DZ,AAHC,gCACE,uBCmCU,CDlCX,AAhBP,gCAmBM,yBC3Cc,AD4Cd,kBAAmB,AACnB,gBC6BY,CDtBb,AAVK,sCAKF,eChEI,CDiEL,AANG,oCAQF,eAAiB,CAClB,AA3BP,sEA+BQ,yBAA0B,AAC1B,oBCkBU,CDjBX,AACC,oCACA,gBCeU,CDdX","file":"alps-theme.css","sourcesContent":["/*------------------------------------*\\\n    $GRIDS\n\\*------------------------------------*/\n\n/**\n* Grid Uniform - For grids that should line up evenly (these grids should not\n* use <hr>'s to separate individual grid items).\n*/\n.grid--uniform {\n  > .gi {\n    border-bottom: 1px solid lighten(#000, 90);\n  }\n}\n","/*------------------------------------*\\\n    $SIDEBAR\n\\*------------------------------------*/\n\n.comment-list {\n  > li {\n    border-top: 1px solid $gray-light;\n    margin-top: $space;\n    padding-top: $space;\n\n    .comment-respond,\n    .children li {\n      margin-top: $space;\n      margin-left: rem(50);\n      padding-left: $space-half;\n      border-left: 1px solid $gray-light;\n    }\n  }\n}\n\n.comment--inner {\n  display: flex;\n  align-items: flex-start;\n}\n\n.comment__form {\n  .comment-reply-title {\n    margin-bottom: $space;\n  }\n}\n.comment__form-title {\n  small {\n\n  }\n}\n.comment__avatar {\n  margin-right: $space-half;\n  display: flex;\n  min-width: rem(50);\n  min-height: rem(50);\n}\n\n.widget {\n  font-family: $font;\n  font-size: rem(14);\n  color: $body-color;\n  ul li {\n    margin-bottom: $space-half;\n  }\n}\n.widget_search {\n  .search-form {\n    width: 100%;\n  }\n  .search-field {\n    display: block;\n    margin-bottom: $space-half;\n  }\n}\n.widget_calendar {\n  table {\n    float: left;\n    width: 100%;\n    color: $body-color;\n    margin-bottom: rem(80);\n    caption {\n      text-transform: uppercase;\n      text-align: left;\n      margin-top: $space-half;\n      margin-bottom: $space-half;\n    }\n    thead {\n      font-size: rem(10);\n      th {\n        padding-bottom: $pad-quarter;\n      }\n    }\n    tbody td {\n      border: 1px solid $body-color;\n      text-align: center;\n      padding: $pad-quarter;\n      &:hover {\n        background: $white;\n      }\n      &.pad {\n        background: none;\n      }\n    }\n    tfoot {\n      #next, #prev {\n        text-transform: uppercase;\n        padding-top: $pad-quarter;\n      }\n      td.pad {\n        padding: $pad-quarter;\n      }\n    }\n  }\n}\n","@import \"tools.mixins\";\n\n/*------------------------------------*\\\n    $VARIABLES\n\\*------------------------------------*/\n\n/**\n * Grid & Baseline Setup\n */\n$fontpx: 16; // Font size (px) baseline applied to <body> and converted to %.\n$defaultpx: 16; // Browser default px used for media queries\n$rembase: 16; // 16px = 1.00rem\n$max-width-px: 1150;\n$max-width: rem($max-width-px) !default;\n\n/**\n * Colors\n */\n$white: #fff;\n$black: #000;\n$error: #f00;\n$valid: #089e00;\n$warning: #fff664;\n$information: #000db5;\n$overlay: rgba($black, .9);\n$overlay-light: rgba($black, .76);\n$gray: lighten($black, 50);\n$gray-light: lighten($black, 90);\n$gray-med: lighten($black, 70);\n//$gray-dark: #575a5c;\n$gray-dark: lighten($black, 20);\n\n/**\n * Style Colors\n */\n$body-color: #575a5c;\n$blue: #438390;\n$brown: #7e7667;\n$brown-med: #908c81;\n$brown-light: #d6d1c2;\n$red: #ef3d25;\n$orange: #f9b000;\n$beige: #fbf9f3;\n$tan: #efe9d7;\n\n/**\n * Theme Colors (Primary)\n */\n$emperor: #4b207f;\n$earth: #5e3929;\n$grapevine: #7f264a;\n$denim: #2f557f;\n$campfire: #e36520;\n$treefrog: #448d21;\n$ming: #3e8391;\n\n/**\n * Theme Colors (Secondary)\n */\n$cool: #4d7549;\n$warm: #ffa92d;\n\n/**\n * Theme Colors (Dark)\n */\n$dark-light: #303030;\n$dark-dark: #252525;\n\n/**\n * Social Colors\n */\n$twitter-blue: #13C4F8;\n$facebook-blue: #4A66A3;\n$instagram-blue: #48769F;\n$instagram-brown: #5f4132;\n$pinterest-red: #FF423E;\n$youtube-red: #b31217;\n$google-red: $youtube-red;\n\n/**\n * Typography\n */\n$font: \"Merriweather\", Georgia, Times, \"Times New Roman\", serif;\n$font-serif: $font;\n$font-secondary: \"Montserrat\", \"Helvetica\", \"Arial\", sans-serif;\n$font-tertiary: \"Oswald\", \"Trade Gothic\", \"Helvetica\", \"Arial\", sans-serif;\n$font-sans: $font-secondary;\n$sans: \"Helvetica\", \"Arial\", sans-serif;\n$serif: Georgia, Times, \"Times New Roman\", serif;\n$monospace: Menlo, Monaco, \"Courier New\", \"Courier\", monospace;\n$font-monospace: $monospace;\n\n/**\n * Amimation\n */\n$cubic-bezier: cubic-bezier(0.860, 0.000, 0.070, 1.000);\n\n/**\n * Default Spacing/Padding\n */\n$space: rem(20);\n$space-and-half: $space*1.5;\n$space-double: $space*2;\n$space-quad: $space*4;\n$space-half: $space/2;\n$pad: rem(20);\n$pad-and-half: $pad*1.5;\n$pad-double: $pad*2;\n$pad-half: $pad/2;\n$pad-quarter: $pad/4;\n\n// uses verticalSpacing(key) function\n$verticalSpacing: (\n  mobile: 20,\n  desktop: 30\n);\n\n/**\n * Border Styles\n */\n$border-med: 6px;\n$border-thick: 8px;\n$border-opacity: 1px solid rgba($white, .2);\n$border-style: 1px solid $gray;\n$border-style-blue: 1px solid $blue;\n$border-style-thick: 3px solid $gray-light;\n$border-style-light: 1px solid $gray-light;\n$border-style-dark: 1px solid $black;\n\n/**\n * Breakpoints\n */\n$px350: (350/$defaultpx) + 0em;\n$px400: (400/$defaultpx) + 0em;\n$px401: (401/$defaultpx) + 0em;\n$px450: (450/$defaultpx) + 0em;\n$px500: (500/$defaultpx) + 0em;\n$px550: (550/$defaultpx) + 0em;\n$px600: (600/$defaultpx) + 0em;\n$px650: (650/$defaultpx) + 0em;\n$px651: (651/$defaultpx) + 0em;\n$px700: (700/$defaultpx) + 0em;\n$px750: (750/$defaultpx) + 0em;\n$px800: (800/$defaultpx) + 0em;\n$px850: (850/$defaultpx) + 0em;\n$px900: (900/$defaultpx) + 0em;\n$px901: (901/$defaultpx) + 0em;\n$px950: (950/$defaultpx) + 0em;\n$px1000: (1000/$defaultpx) + 0em;\n$px1050: (1050/$defaultpx) + 0em;\n$px1100: (1100/$defaultpx) + 0em;\n$px1101: (1101/$defaultpx) + 0em;\n$px1150: (1150/$defaultpx) + 0em;\n$px1200: (1200/$defaultpx) + 0em;\n$px1250: (1250/$defaultpx) + 0em;\n$px1300: (1300/$defaultpx) + 0em;\n$px1301: (1301/$defaultpx) + 0em;\n$px1400: (1400/$defaultpx) + 0em;\n$px1450: (1450/$defaultpx) + 0em;\n$px1500: (1500/$defaultpx) + 0em;\n$px1501: (1501/$defaultpx) + 0em;\n\n/**\n * Common Breakpoints\n */\n$small: $px400;\n$medium: $px700;\n$large: $px900;\n$xlarge: $px1100;\n$xxlarge: $px1300;\n$xxxlarge: $px1500;\n\n// uses px width / base font width to return a value in em units\n$breakpoints: (\n  xsmall:   $px350,\n  small:    $small,\n  medium:   $medium,\n  large:    $large,\n  xlarge:   $xlarge,\n  xxlarge:  $xxlarge,\n  xxxlarge: $xxxlarge\n);\n\n/**\n * Element Specific Dimensions\n */\n$sidebar-width: 320;\n$small-header-height: 60;\n$wide-header-height: 82;\n$split-col1: (354/$defaultpx) + 0em; // Right padding for split layout with fixed sidebar\n$split-col2: (300/$defaultpx) + 0em; // Fixed width of right column\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n"],"sourceRoot":"assets/styles/"}